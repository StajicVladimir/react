{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/pages/QuoteDetail.js"],"names":["module","exports","HighlightedQuote","props","className","classes","quote","text","author","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","QuoteDetail","params","useParams","match","useRouteMatch","quoteId","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","LoadingSpinner","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,MAAQ,kC,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,wFCUrIC,EATU,SAACC,GACxB,OACE,yBAAQC,UAAWC,IAAQC,MAA3B,UACE,4BAAIH,EAAMI,OACV,qCAAaJ,EAAMK,a,0CCsBVC,EAxBQ,SAACN,GACtB,IAAMO,EAAiBC,mBAEjBC,EAAoB,SAACC,GACzBA,EAAMC,kBAOR,OACE,uBAAMV,UAAWC,IAAQU,KAAMC,SAAUJ,EAAzC,UACE,sBAAKR,UAAWC,IAAQY,QAASD,SAAUJ,EAA3C,UACE,uBAAOM,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKX,OAEvC,qBAAKN,UAAWC,IAAQiB,QAAxB,SACE,wBAAQlB,UAAU,MAAlB,+BCIOmB,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAAStB,UAAWC,IAAQsB,SAA5B,UACE,gDACEF,GACA,wBAAQrB,UAAU,MAAMwB,QARC,WAC7BF,GAAmB,IAOf,2BAIDD,GAAmB,cAAC,EAAD,IACpB,gD,wBCiCSI,UAzCK,WAClB,IAAMC,EAASC,cACTC,EAAQC,cAENC,EAAYJ,EAAZI,QACR,EAAwDC,YAAQC,KAAgB,GAAzEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAmBC,EAA/C,EAA+CA,MAM/C,OAJAC,qBAAU,WACRL,EAAYH,KACZ,CAACG,EAAaH,IAED,YAAXI,EACK,qBAAKlC,UAAU,WAAf,SACL,cAACuC,EAAA,EAAD,MAIAF,EACK,mBAAGrC,UAAU,WAAb,SAAyBqC,IAE7BF,EAAYhC,KAKf,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,KAAMgC,EAAYhC,KAAMC,OAAQ+B,EAAY/B,SAC9D,cAAC,IAAD,CAAOoC,KAAI,UAAKZ,EAAMY,MAAQC,OAAK,EAAnC,SACE,qBAAKzC,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAY0C,GAAE,UAAKd,EAAMe,IAAX,aAA9B,+BAKJ,cAAC,IAAD,CAAOH,KAAI,UAAKZ,EAAMY,KAAX,aAAX,SACE,cAAC,EAAD,SAdG","file":"static/js/5.67b3e14e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__9R5T7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1RADp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__YLHbw\",\"loading\":\"NewCommentForm_loading__1LAvm\",\"control\":\"NewCommentForm_control__5xmzo\",\"actions\":\"NewCommentForm_actions__iyXm-\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment,useEffect } from \"react\";\r\nimport { useParams, Route, Link } from \"react-router-dom\";\r\n\r\nimport HighlightedQuote from \"../quotes/HighlightedQuote\";\r\n\r\nimport { useRouteMatch } from \"react-router\";\r\n\r\nimport Comment from \"../comments/Comments\";\r\n\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport { getSingleQuote } from \"../../lib/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const { quoteId } = params;\r\n  const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  },[sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  };\r\n\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>\r\n  }\r\n  if (!loadedQuote.text) {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comment />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}